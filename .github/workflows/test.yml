name: Merge-upstream  

on:  
  push:  
    branches:  
      - lede  
      - openwrt  
      - immortalwrt    
  schedule:  
    - cron: '0 */6 * * *'  # 每6小时执行一次  
  workflow_dispatch:   
    inputs:  
      ssh:  
        description: 'ssh'  
        required: false  
        default: 'false'  
  watch:  
    types: started  

jobs:  
  update-packages:  
    if: github.event.repository.owner.id == github.event.sender.id || !github.event.sender.id || github.event.sender.id == 71822883  
    runs-on: ubuntu-latest  
    strategy:  
      matrix:  
        branch: [lede, openwrt, immortalwrt]  

    steps:  
      - name: Checkout  
        uses: actions/checkout@v2  
        with:  
          ref: ${{ matrix.branch }}  

      - uses: de-vri-es/setup-git-credentials@v2  
        with:  
          credentials: https://vison-v:${{ secrets.REPO_TOKEN }}@github.com/  
    
      - name: Set git identity  
        run: |  
          git config --global user.email "github-actions[bot]@users.noreply.github.com"  
          git config --global user.name "github-actions[bot]"  
          sudo timedatectl set-timezone "Asia/Shanghai"  
    
      - name: Fetch Remote Changes  
        run: |  
          git fetch origin ${{ matrix.branch }}  

      - name: Sync upstream  
        run: |  
          chmod +x sync_upstream.sh  # 确保脚本可执行  
          sync_upstream.sh ${{ matrix.branch }}  # 传递当前分支  

      - name: Language Management  
        run: |  
         if ls -d luci-app-*/po > /dev/null 2>&1; then  
           for dir in luci-app-*/po; do  
             ls -d "$dir"/*/ | grep -v '/zh-cn/' | grep -v '/zh_Hans/' | xargs rm -rf  
           done  
            for e in $(ls -d luci-app-*/po); do  
              if [[ -d $e/zh-cn && ! -d $e/zh_Hans ]]; then  
                cp -rf $e/zh-cn $e/zh_Hans 2>/dev/null  
              elif [[ -d $e/zh_Hans && ! -d $e/zh-cn ]]; then  
                cp -rf $e/zh_Hans $e/zh-cn 2>/dev/null  
              fi  
            done  
         fi       

      - name: Apply Changes  
        run: |  
          Emoji=("🎉" "🤞" "✨" "🎁" "🎈" "🎄" "🎨" "💋" "🍓" "🍕" "🍉" "💐" "🌴" "🚀" "🛸" "🗽" "⛅" "🌈" "🔥" "⛄" "🐶" "🏅" "🦄" "🐤")  
          git add .  
          git commit -m "${Emoji[$RANDOM % ${#Emoji[@]}]} Sync $(date +%Y-%m-%d" "%H:%M:%S)" || echo "No changes to commit"    
          git push -f
