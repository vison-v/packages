#  
# This is free software, license use MIT.  
#  
# <https://github.com/kiddin9/openwrt-packages>  
#  

name: Merge-upstream  

on:  
  push:  
    paths:  
      - '.github/workflows/upstream.yml'  
      - '.gitignore'  
  schedule:  
    - cron: '0 */6 * * *'  
  workflow_dispatch:  
  watch:  
    types: started  

jobs:  
  update:  
    strategy:  
      matrix:  
        branch: [lede, openwrt, immortalwrt]  
    runs-on: ubuntu-22.04  

    steps:  
      - name: Checkout  
        uses: actions/checkout@v2  
        with:  
          ref: ${{ matrix.branch }}  
          fetch-depth: 0  

      - uses: de-vri-es/setup-git-credentials@v2  
        with:  
          credentials: https://vison-v:${{ secrets.REPO_TOKEN }}@github.com/  

      - name: Set git identity  
        run: |  
          git config --global user.email "github-actions[bot]@users.noreply.github.com"  
          git config --global user.name "github-actions[bot]"  
          sudo timedatectl set-timezone "Asia/Shanghai"  

      - name: Sync upstream  
        run: |  
          set +e  
          rm -rf ./* >/dev/null 2>&1  

          function git_clone() {  
            git clone --depth 1 "$1" "$2"  
            if [ "$?" != 0 ]; then  
              echo "Error cloning $1"  
              exit 1  
            fi  
          }  

          function git_sparse_clone() {  
            branch="$1"  
            curl="$2"  
            shift 2  
            rootdir="$PWD"  
            tmpdir="$(mktemp -d)" || exit 1  
            git clone --filter=blob:none --sparse "$curl" "$tmpdir"  
            cd "$tmpdir" || exit  
            git checkout "$branch"  
            git sparse-checkout init --cone  
            git sparse-checkout set "$@"  
            mv -n "$@" "$rootdir/" || true  
            cd "$rootdir" || exit  
            rm -rf "$tmpdir"  
          }  

          function mvdir() {  
            mv -n $(find "$1"/* -maxdepth 0 -type d) ./  
            rm -rf "$1"  
          }  
          
          # Clone necessary repositories  
          git_clone https://github.com/xiaorouji/openwrt-passwall passwall && mv -n passwall/luci-app-passwall ./ && rm -rf passwall  
          git_clone https://github.com/xiaorouji/openwrt-passwall2 passwall2 && mv -n passwall2/luci-app-passwall2 ./ && rm -rf passwall2  
          git clone https://github.com/kenzok8/small small && rm -rf small/{luci-app-passwall,luci-app-passwall2} && mvdir small  
          git_sparse_clone main https://github.com/kiddin9/luci-app-tcpdump luci-app-tcpdump  
          git_sparse_clone main "https://github.com/gdy666/luci-app-lucky" luci-app-lucky lucky  

          # Branch specific updates  
          if [ "${{ matrix.branch }}" == "lede" ]; then  
            git_sparse_clone main https://github.com/kiddin9/kwrt-packages luci-app-wechatpush luci-theme-argon luci-app-argon-config \
            git_sparse_clone main https://github.com/kiddin9/kwrt-packages luci-app-quickstart quickstart luci-app-eqosplus \
              luci-app-oaf open-app-filter oaf  luci-app-wrtbwmon wrtbwmon \
              luci-app-control-timewol luci-app-control-webrestriction luci-app-control-weburl \
          
          elif [ "${{ matrix.branch }}" == "openwrt" ]; then  
            git_sparse_clone master https://github.com/immortalwrt/immortalwrt package/emortal/default-settings  
          
          elif [ "${{ matrix.branch }}" == "immortalwrt" ]; then  
            echo "No updates available for immortalwrt"  
          fi  

          for e in $(ls -d ./luci-app-*/po); do  
            po_dir=$e  
            find "$po_dir" -type d ! -name 'zh-cn' ! -name 'zh_Hans' -exec rm -rf {} +  

            if [[ -d "$po_dir/zh-cn" && ! -d "$po_dir/zh_Hans" ]]; then  
              ln -s zh-cn "$po_dir/zh_Hans" 2>/dev/null  
            elif [[ -d "$po_dir/zh_Hans" && ! -d "$po_dir/zh-cn" ]]; then  
              ln -s zh_Hans "$po_dir/zh-cn" 2>/dev/null  
            fi  
          done  

      - name: Apply changes  
        run: |  
          Emoji=("🎉" "🤞" "✨" "🎁" "🎈" "🎄" "🎨" "💋" "🍓" "🍕" "🍉" "💐" "🌴" "🚀" "🛸" "🗽" "⛅" "🌈" "🔥" "⛄" "🐶" "🏅" "🦄" "🐤")  
          git add .  
          git commit -m "${Emoji[$RANDOM % ${#Emoji[@]}]} Sync $(date +'%Y-%m-%d %H:%M:%S')"  
          git push -f  

      - name: Delete old workflow runs  
        uses: Mattraks/delete-workflow-runs@main  
        continue-on-error: true  
        with:  
          retain_days: 1  
          keep_minimum_runs: 3
